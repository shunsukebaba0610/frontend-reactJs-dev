{"ast":null,"code":"var _jsxFileName = \"/Users/bernie/development/youtube/react-firebase-image-up/src/ImageUploader.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport ImageLogo from \"./image.svg\";\nimport \"./ImageUpload.css\";\nimport storage from \"./firebase\";\nimport { getDownloadURL, ref, uploadBytes, uploadBytesResumable } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImageUploader = () => {\n  _s();\n\n  const [isloading, setIsLoading] = useState(false);\n  const [isUploading, setIsUpLoading] = useState(false);\n\n  const OnFileUploadToFirebase = e => {\n    //console.log(e.target.files[0].name)\n    const file = e.target.files[0];\n    const storageRef = ref(storage, \"image/\" + file.name); // uploadBytes(storageRef, file).then((snapshot) => {\n    //   console.log('Uploaded a blob or file!');\n    // });\n\n    const uploadedTask = uploadBytesResumable(storageRef, file);\n    uploadedTask.on(\"state_changed\", snapshot => {\n      setIsLoading(true);\n    }, error => {\n      console.log(error);\n    }, // Handle successful uploads on complete\n    () => {\n      setIsLoading(false);\n      setIsUpLoading(true);\n      getDownloadURL(uploadedTask.snapshot.ref).then(downloadURL => {\n        console.log('File available at' + downloadURL);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isloading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u4E2D\\u30FB\\u30FB\\u30FB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u5B8C\\u4E86\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false) // <div className=\"outerBox\">\n  //   <div className=\"title\">\n  //     <h2>画像アップローダー</h2>\n  //     <p>JpegかPngの画像ファイル</p>\n  //   </div>\n  //   <div className=\"imageUplodeBox\">\n  //     <div className=\"imageLogoAndText\">\n  //       <img src={ImageLogo} alt=\"imagelogo\" />\n  //       <p>ここにドラッグ＆ドロップしてね</p>\n  //     </div>\n  //     <input className=\"imageUploadInput\"\n  //       multiple name=\"imageURL\"\n  //       type=\"file\"\n  //       accept=\".png, .jpeg, .jpg\"\n  //       onChange={OnFileUploadToFirebase}\n  //     />\n  //   </div>\n  //   <p>または</p>\n  //   <Button variant=\"contained\">\n  //     ファイルを選択\n  //     <input className=\"imageUploadInput\"\n  //       type=\"file\"\n  //       accept=\".png, .jpeg, .jpg\"\n  //       onChange={OnFileUploadToFirebase} />\n  //   </Button>\n  // </div>\n  ;\n};\n\n_s(ImageUploader, \"Zrk1gE3FY6t7JUFhVY4UWYxNDhU=\");\n\n_c = ImageUploader;\nexport default ImageUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"sources":["/Users/bernie/development/youtube/react-firebase-image-up/src/ImageUploader.js"],"names":["Button","React","useState","ImageLogo","storage","getDownloadURL","ref","uploadBytes","uploadBytesResumable","ImageUploader","isloading","setIsLoading","isUploading","setIsUpLoading","OnFileUploadToFirebase","e","file","target","files","storageRef","name","uploadedTask","on","snapshot","error","console","log","then","downloadURL"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,mBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,cAAT,EAAyBC,GAAzB,EAA8BC,WAA9B,EAA2CC,oBAA3C,QAAuE,kBAAvE;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMY,sBAAsB,GAAIC,CAAD,IAAO;AACpC;AACA,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,UAAU,GAAGb,GAAG,CAACF,OAAD,EAAU,WAAWY,IAAI,CAACI,IAA1B,CAAtB,CAHoC,CAIpC;AACA;AACA;;AACA,UAAMC,YAAY,GAAGb,oBAAoB,CAACW,UAAD,EAAaH,IAAb,CAAzC;AAEAK,IAAAA,YAAY,CAACC,EAAb,CAAgB,eAAhB,EAAkCC,QAAD,IAAc;AAC7CZ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,EAGGa,KAAD,IAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KALH,EAME;AACA,UAAM;AACJb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAR,MAAAA,cAAc,CAACgB,YAAY,CAACE,QAAb,CAAsBjB,GAAvB,CAAd,CAA0CqB,IAA1C,CAAgDC,WAAD,IAAiB;AAC9DH,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBE,WAAlC;AACD,OAFD;AAGD,KAbH;AAeD,GAxBD;;AA0BA,sBACE;AAAA,cACGlB,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAJJ,mBADF,CAWE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCF;AAsCD,CApED;;GAAMD,a;;KAAAA,a;AAsEN,eAAeA,aAAf","sourcesContent":["import { Button } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport ImageLogo from \"./image.svg\";\r\nimport \"./ImageUpload.css\";\r\nimport storage from \"./firebase\";\r\nimport { getDownloadURL, ref, uploadBytes, uploadBytesResumable } from \"firebase/storage\";\r\n\r\nconst ImageUploader = () => {\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const [isUploading, setIsUpLoading] = useState(false);\r\n\r\n  const OnFileUploadToFirebase = (e) => {\r\n    //console.log(e.target.files[0].name)\r\n    const file = e.target.files[0]\r\n    const storageRef = ref(storage, \"image/\" + file.name)\r\n    // uploadBytes(storageRef, file).then((snapshot) => {\r\n    //   console.log('Uploaded a blob or file!');\r\n    // });\r\n    const uploadedTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadedTask.on(\"state_changed\", (snapshot) => {\r\n      setIsLoading(true);\r\n    },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      // Handle successful uploads on complete\r\n      () => {\r\n        setIsLoading(false);\r\n        setIsUpLoading(true);\r\n        getDownloadURL(uploadedTask.snapshot.ref).then((downloadURL) => {\r\n          console.log('File available at' + downloadURL);\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isloading ? (\r\n        <h2>アップロード中・・・</h2>\r\n      ) : (\r\n        <>\r\n          <h2>アップロード完了</h2>\r\n        </>\r\n      )}\r\n\r\n    </>\r\n    // <div className=\"outerBox\">\r\n    //   <div className=\"title\">\r\n    //     <h2>画像アップローダー</h2>\r\n    //     <p>JpegかPngの画像ファイル</p>\r\n    //   </div>\r\n    //   <div className=\"imageUplodeBox\">\r\n    //     <div className=\"imageLogoAndText\">\r\n    //       <img src={ImageLogo} alt=\"imagelogo\" />\r\n    //       <p>ここにドラッグ＆ドロップしてね</p>\r\n    //     </div>\r\n    //     <input className=\"imageUploadInput\"\r\n    //       multiple name=\"imageURL\"\r\n    //       type=\"file\"\r\n    //       accept=\".png, .jpeg, .jpg\"\r\n    //       onChange={OnFileUploadToFirebase}\r\n    //     />\r\n    //   </div>\r\n    //   <p>または</p>\r\n    //   <Button variant=\"contained\">\r\n    //     ファイルを選択\r\n    //     <input className=\"imageUploadInput\"\r\n    //       type=\"file\"\r\n    //       accept=\".png, .jpeg, .jpg\"\r\n    //       onChange={OnFileUploadToFirebase} />\r\n    //   </Button>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n"]},"metadata":{},"sourceType":"module"}