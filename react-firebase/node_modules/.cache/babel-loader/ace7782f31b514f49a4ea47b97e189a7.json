{"ast":null,"code":"var _jsxFileName = \"/Users/bernie/development/youtube/react-firebase/src/components/Line/SignIn.js\";\nimport React from 'react'; //import firebase from \"firebase/compat/app\";\n\nimport { auth } from './firebaseDB';\nimport { signInWithPopup, signInWithRedirect, GoogleAuthProvider } from \"firebase/auth\";\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithRedirect(auth, provider).then(result => {\n      //signInWithPopup(auth, provider)  .then((result) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken; // The signed-in user info.\n\n      const user = result.user; // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.email; // The AuthCredential type that was used.\n\n      const credential = GoogleAuthProvider.credentialFromError(error); // ...\n    });\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: signInWithGoogle,\n      children: \"Google\\u3067LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/bernie/development/youtube/react-firebase/src/components/Line/SignIn.js"],"names":["React","auth","signInWithPopup","signInWithRedirect","GoogleAuthProvider","Button","SignIn","signInWithGoogle","provider","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","credentialFromError"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,kBAA9C,QAAwE,eAAxE;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAGA,eAAe,SAASC,MAAT,GAAkB;AAEhC,QAAMC,gBAAgB,GAAG,MAAM;AAC9B,UAAMC,QAAQ,GAAG,IAAIJ,kBAAJ,EAAjB;AACAD,IAAAA,kBAAkB,CAACF,IAAD,EAAOO,QAAP,CAAlB,CACEC,IADF,CACQC,MAAD,IAAY;AACjB;AACA;AACA,YAAMC,UAAU,GAAGP,kBAAkB,CAACQ,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,YAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB,CAJiB,CAKjB;;AACA,YAAMC,IAAI,GAAGL,MAAM,CAACK,IAApB,CANiB,CAOjB;AACA,KATF,EASIC,KATJ,CASWC,KAAD,IAAW;AACnB;AACA,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHmB,CAInB;;AACA,YAAMC,KAAK,GAAGL,KAAK,CAACK,KAApB,CALmB,CAMnB;;AACA,YAAMX,UAAU,GAAGP,kBAAkB,CAACmB,mBAAnB,CAAuCN,KAAvC,CAAnB,CAPmB,CAQnB;AACA,KAlBF;AAkBI;AACJ,GArBD;;AAuBA,sBACC;AAAA,2BACC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEV,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;KA9BuBD,M","sourcesContent":["import React from 'react'\n//import firebase from \"firebase/compat/app\";\nimport { auth } from './firebaseDB';\nimport { signInWithPopup, signInWithRedirect, GoogleAuthProvider } from \"firebase/auth\";\nimport { Button } from '@material-ui/core'\n\n\nexport default function SignIn() {\n\n\tconst signInWithGoogle = () => {\n\t\tconst provider = new GoogleAuthProvider();\n\t\tsignInWithRedirect(auth, provider)\n\t\t\t.then((result) => {\n\t\t\t\t//signInWithPopup(auth, provider)  .then((result) => {\n\t\t\t\t// This gives you a Google Access Token. You can use it to access the Google API.\n\t\t\t\tconst credential = GoogleAuthProvider.credentialFromResult(result);\n\t\t\t\tconst token = credential.accessToken;\n\t\t\t\t// The signed-in user info.\n\t\t\t\tconst user = result.user;\n\t\t\t\t// ...\n\t\t\t}).catch((error) => {\n\t\t\t\t// Handle Errors here.\n\t\t\t\tconst errorCode = error.code;\n\t\t\t\tconst errorMessage = error.message;\n\t\t\t\t// The email of the user's account used.\n\t\t\t\tconst email = error.email;\n\t\t\t\t// The AuthCredential type that was used.\n\t\t\t\tconst credential = GoogleAuthProvider.credentialFromError(error);\n\t\t\t\t// ...\n\t\t\t});;\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Button onClick={signInWithGoogle}>Google„ÅßLOGIN</Button>\n\t\t</div>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}