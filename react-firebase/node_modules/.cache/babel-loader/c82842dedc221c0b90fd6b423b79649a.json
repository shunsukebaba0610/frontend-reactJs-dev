{"ast":null,"code":"var _jsxFileName = \"/Users/bernie/development/youtube/react-firebase/src/components/Line/Line.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth, db } from './firebaseDB';\nimport SignIn from './SignIn';\nimport SignOut from './SignOut';\nimport SendMessage from './SendMessage';\nimport './Line.css';\nimport { GoogleAuthProvider } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Line() {\n  _s();\n\n  const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n  const [user] = useAuthState(auth);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    db.collection(\"messages\").orderBy('createdAt').limit(50).onSnapshot(snapshot => {\n      const data = snapshot.docs.map(doc => doc.data());\n      console.log(credential);\n      setMessages(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SignOut, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msgs\",\n        children: messages.map(_ref => {\n          let {\n            id,\n            text,\n            photoURL,\n            uid\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `msg ${uid === auth.currentUser ? 'sent' : 'received'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: photoURL,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 10\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(SendMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Line, \"Q815AT8f67D1HIt0ls/SxEZi+4c=\", false, function () {\n  return [useAuthState];\n});\n\n_c = Line;\nexport default Line;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"sources":["/Users/bernie/development/youtube/react-firebase/src/components/Line/Line.js"],"names":["React","useState","useEffect","useAuthState","auth","db","SignIn","SignOut","SendMessage","GoogleAuthProvider","Line","credential","googleUser","getAuthResponse","id_token","user","messages","setMessages","collection","orderBy","limit","onSnapshot","snapshot","data","docs","map","doc","console","log","id","text","photoURL","uid","currentUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,YAAP;AAEA,SAASC,kBAAT,QAAmC,eAAnC;;;;AAIA,SAASC,IAAT,GAAgB;AAAA;;AACf,QAAMC,UAAU,GAAGF,kBAAkB,CAACE,UAAnB,CAClBC,UAAU,CAACC,eAAX,GAA6BC,QADX,CAAnB;AAEC,QAAM,CAACC,IAAD,IAASZ,YAAY,CAACC,IAAD,CAA3B;AACD,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,EAAE,CAACa,UAAH,CAAc,UAAd,EACEC,OADF,CACU,WADV,EAEEC,KAFF,CAEQ,EAFR,EAGEC,UAHF,CAGcC,QAAD,IAAc;AACzB,YAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,IAASA,GAAG,CAACH,IAAJ,EAA3B,CAAb;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACAM,MAAAA,WAAW,CAACM,IAAD,CAAX;AACA,KAPF;AAQA,GATQ,EASN,EATM,CAAT;AAWA,sBACC;AAAA,cACER,IAAI,gBACJ;AAAA,8BACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACEC,QAAQ,CAACS,GAAT,CAAa;AAAA,cAAC;AAAEI,YAAAA,EAAF;AAAMC,YAAAA,IAAN;AAAYC,YAAAA,QAAZ;AAAsBC,YAAAA;AAAtB,WAAD;AAAA,8BACb;AAAA,mCACC;AACC,cAAA,SAAS,EAAG,OAAMA,GAAG,KAAK5B,IAAI,CAAC6B,WAAb,GAA2B,MAA3B,GAAoC,UAAW,EADlE;AAAA,sCAEC;AAAK,gBAAA,GAAG,EAAEF,QAAV;AAAoB,gBAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAFD,eAGC;AAAA,0BAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,sBAHD;AAAA,eAAUD,EAAV;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADa;AAAA,SAAb;AADF;AAAA;AAAA;AAAA;AAAA,cAFD,eAaC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAbD;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,gBAiBJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAlBF,mBADD;AAuBA;;GAxCQnB,I;UAGQP,Y;;;KAHRO,I;AA0CT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useAuthState } from \"react-firebase-hooks/auth\"\nimport { auth, db } from './firebaseDB';\nimport SignIn from './SignIn';\nimport SignOut from './SignOut';\nimport SendMessage from './SendMessage';\nimport './Line.css';\n\nimport { GoogleAuthProvider } from \"firebase/auth\";\n\n\n\nfunction Line() {\n\tconst credential = GoogleAuthProvider.credential(\n\t\tgoogleUser.getAuthResponse().id_token);\n\t\tconst [user] = useAuthState(auth);\n\tconst [messages, setMessages] = useState([]);\n\n\tuseEffect(() => {\n\t\tdb.collection(\"messages\")\n\t\t\t.orderBy('createdAt')\n\t\t\t.limit(50)\n\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\tconst data = snapshot.docs.map((doc) => doc.data());\n\t\t\t\tconsole.log(credential);\n\t\t\t\tsetMessages(data);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{user ? (\n\t\t\t\t<div>\n\t\t\t\t\t<SignOut />\n\t\t\t\t\t<div className='msgs'>\n\t\t\t\t\t\t{messages.map(({ id, text, photoURL, uid }) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div key={id}\n\t\t\t\t\t\t\t\t\tclassName={`msg ${uid === auth.currentUser ? 'sent' : 'received'}`} >\n\t\t\t\t\t\t\t\t\t<img src={photoURL} alt=\"\" />\n\t\t\t\t\t\t\t\t\t<p>{text}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<SendMessage />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<SignIn />\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default Line;"]},"metadata":{},"sourceType":"module"}