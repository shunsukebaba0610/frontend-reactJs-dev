{"ast":null,"code":"var re = Object.create;\nvar H = Object.defineProperty;\nvar te = Object.getOwnPropertyDescriptor;\nvar ne = Object.getOwnPropertyNames;\nvar ie = Object.getPrototypeOf,\n    oe = Object.prototype.hasOwnProperty;\n\nvar ae = n => H(n, \"__esModule\", {\n  value: !0\n});\n\nvar k = (n, r) => () => (r || n((r = {\n  exports: {}\n}).exports, r), r.exports);\n\nvar se = (n, r, c, _) => {\n  if (r && typeof r == \"object\" || typeof r == \"function\") for (let p of ne(r)) !oe.call(n, p) && (c || p !== \"default\") && H(n, p, {\n    get: () => r[p],\n    enumerable: !(_ = te(r, p)) || _.enumerable\n  });\n  return n;\n},\n    T = (n, r) => se(ae(H(n != null ? re(ie(n)) : {}, \"default\", !r && n && n.__esModule ? {\n  get: () => n.default,\n  enumerable: !0\n} : {\n  value: n,\n  enumerable: !0\n})), n);\n\nvar C = (n, r, c) => new Promise((_, p) => {\n  var w = h => {\n    try {\n      d(c.next(h));\n    } catch (f) {\n      p(f);\n    }\n  },\n      R = h => {\n    try {\n      d(c.throw(h));\n    } catch (f) {\n      p(f);\n    }\n  },\n      d = h => h.done ? _(h.value) : Promise.resolve(h.value).then(w, R);\n\n  d((c = c.apply(n, r)).next());\n});\n\nvar P = k((I, F) => {\n  (function (n, r) {\n    typeof I == \"object\" ? F.exports = I = r() : typeof define == \"function\" && define.amd ? define([], r) : n.CryptoJS = r();\n  })(I, function () {\n    var n = n || function (r, c) {\n      var _ = Object.create || function () {\n        function e() {}\n\n        return function (t) {\n          var s;\n          return e.prototype = t, s = new e(), e.prototype = null, s;\n        };\n      }(),\n          p = {},\n          w = p.lib = {},\n          R = w.Base = function () {\n        return {\n          extend: function (e) {\n            var t = _(this);\n\n            return e && t.mixIn(e), (!t.hasOwnProperty(\"init\") || this.init === t.init) && (t.init = function () {\n              t.$super.init.apply(this, arguments);\n            }), t.init.prototype = t, t.$super = this, t;\n          },\n          create: function () {\n            var e = this.extend();\n            return e.init.apply(e, arguments), e;\n          },\n          init: function () {},\n          mixIn: function (e) {\n            for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);\n\n            e.hasOwnProperty(\"toString\") && (this.toString = e.toString);\n          },\n          clone: function () {\n            return this.init.prototype.extend(this);\n          }\n        };\n      }(),\n          d = w.WordArray = R.extend({\n        init: function (e, t) {\n          e = this.words = e || [], t != c ? this.sigBytes = t : this.sigBytes = e.length * 4;\n        },\n        toString: function (e) {\n          return (e || f).stringify(this);\n        },\n        concat: function (e) {\n          var t = this.words,\n              s = e.words,\n              i = this.sigBytes,\n              g = e.sigBytes;\n          if (this.clamp(), i % 4) for (var v = 0; v < g; v++) {\n            var b = s[v >>> 2] >>> 24 - v % 4 * 8 & 255;\n            t[i + v >>> 2] |= b << 24 - (i + v) % 4 * 8;\n          } else for (var v = 0; v < g; v += 4) t[i + v >>> 2] = s[v >>> 2];\n          return this.sigBytes += g, this;\n        },\n        clamp: function () {\n          var e = this.words,\n              t = this.sigBytes;\n          e[t >>> 2] &= 4294967295 << 32 - t % 4 * 8, e.length = r.ceil(t / 4);\n        },\n        clone: function () {\n          var e = R.clone.call(this);\n          return e.words = this.words.slice(0), e;\n        },\n        random: function (e) {\n          for (var t = [], s = function (y) {\n            var y = y,\n                A = 987654321,\n                B = 4294967295;\n            return function () {\n              A = 36969 * (A & 65535) + (A >> 16) & B, y = 18e3 * (y & 65535) + (y >> 16) & B;\n              var x = (A << 16) + y & B;\n              return x /= 4294967296, x += .5, x * (r.random() > .5 ? 1 : -1);\n            };\n          }, i = 0, g; i < e; i += 4) {\n            var v = s((g || r.random()) * 4294967296);\n            g = v() * 987654071, t.push(v() * 4294967296 | 0);\n          }\n\n          return new d.init(t, e);\n        }\n      }),\n          h = p.enc = {},\n          f = h.Hex = {\n        stringify: function (e) {\n          for (var t = e.words, s = e.sigBytes, i = [], g = 0; g < s; g++) {\n            var v = t[g >>> 2] >>> 24 - g % 4 * 8 & 255;\n            i.push((v >>> 4).toString(16)), i.push((v & 15).toString(16));\n          }\n\n          return i.join(\"\");\n        },\n        parse: function (e) {\n          for (var t = e.length, s = [], i = 0; i < t; i += 2) s[i >>> 3] |= parseInt(e.substr(i, 2), 16) << 24 - i % 8 * 4;\n\n          return new d.init(s, t / 2);\n        }\n      },\n          m = h.Latin1 = {\n        stringify: function (e) {\n          for (var t = e.words, s = e.sigBytes, i = [], g = 0; g < s; g++) {\n            var v = t[g >>> 2] >>> 24 - g % 4 * 8 & 255;\n            i.push(String.fromCharCode(v));\n          }\n\n          return i.join(\"\");\n        },\n        parse: function (e) {\n          for (var t = e.length, s = [], i = 0; i < t; i++) s[i >>> 2] |= (e.charCodeAt(i) & 255) << 24 - i % 4 * 8;\n\n          return new d.init(s, t);\n        }\n      },\n          o = h.Utf8 = {\n        stringify: function (e) {\n          try {\n            return decodeURIComponent(escape(m.stringify(e)));\n          } catch {\n            throw new Error(\"Malformed UTF-8 data\");\n          }\n        },\n        parse: function (e) {\n          return m.parse(unescape(encodeURIComponent(e)));\n        }\n      },\n          u = w.BufferedBlockAlgorithm = R.extend({\n        reset: function () {\n          this._data = new d.init(), this._nDataBytes = 0;\n        },\n        _append: function (e) {\n          typeof e == \"string\" && (e = o.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes;\n        },\n        _process: function (e) {\n          var t = this._data,\n              s = t.words,\n              i = t.sigBytes,\n              g = this.blockSize,\n              v = g * 4,\n              b = i / v;\n          e ? b = r.ceil(b) : b = r.max((b | 0) - this._minBufferSize, 0);\n          var y = b * g,\n              A = r.min(y * 4, i);\n\n          if (y) {\n            for (var B = 0; B < y; B += g) this._doProcessBlock(s, B);\n\n            var x = s.splice(0, y);\n            t.sigBytes -= A;\n          }\n\n          return new d.init(x, A);\n        },\n        clone: function () {\n          var e = R.clone.call(this);\n          return e._data = this._data.clone(), e;\n        },\n        _minBufferSize: 0\n      }),\n          a = w.Hasher = u.extend({\n        cfg: R.extend(),\n        init: function (e) {\n          this.cfg = this.cfg.extend(e), this.reset();\n        },\n        reset: function () {\n          u.reset.call(this), this._doReset();\n        },\n        update: function (e) {\n          return this._append(e), this._process(), this;\n        },\n        finalize: function (e) {\n          e && this._append(e);\n\n          var t = this._doFinalize();\n\n          return t;\n        },\n        blockSize: 512 / 32,\n        _createHelper: function (e) {\n          return function (t, s) {\n            return new e.init(s).finalize(t);\n          };\n        },\n        _createHmacHelper: function (e) {\n          return function (t, s) {\n            return new l.HMAC.init(e, s).finalize(t);\n          };\n        }\n      }),\n          l = p.algo = {};\n\n      return p;\n    }(Math);\n\n    return n;\n  });\n});\nvar z = k((S, W) => {\n  (function (n, r) {\n    typeof S == \"object\" ? W.exports = S = r(P()) : typeof define == \"function\" && define.amd ? define([\"./core\"], r) : r(n.CryptoJS);\n  })(S, function (n) {\n    return function (r) {\n      var c = n,\n          _ = c.lib,\n          p = _.WordArray,\n          w = _.Hasher,\n          R = c.algo,\n          d = [],\n          h = [];\n\n      (function () {\n        function o(e) {\n          for (var t = r.sqrt(e), s = 2; s <= t; s++) if (!(e % s)) return !1;\n\n          return !0;\n        }\n\n        function u(e) {\n          return (e - (e | 0)) * 4294967296 | 0;\n        }\n\n        for (var a = 2, l = 0; l < 64;) o(a) && (l < 8 && (d[l] = u(r.pow(a, 1 / 2))), h[l] = u(r.pow(a, 1 / 3)), l++), a++;\n      })();\n\n      var f = [],\n          m = R.SHA256 = w.extend({\n        _doReset: function () {\n          this._hash = new p.init(d.slice(0));\n        },\n        _doProcessBlock: function (o, u) {\n          for (var a = this._hash.words, l = a[0], e = a[1], t = a[2], s = a[3], i = a[4], g = a[5], v = a[6], b = a[7], y = 0; y < 64; y++) {\n            if (y < 16) f[y] = o[u + y] | 0;else {\n              var A = f[y - 15],\n                  B = (A << 25 | A >>> 7) ^ (A << 14 | A >>> 18) ^ A >>> 3,\n                  x = f[y - 2],\n                  Y = (x << 15 | x >>> 17) ^ (x << 13 | x >>> 19) ^ x >>> 10;\n              f[y] = B + f[y - 7] + Y + f[y - 16];\n            }\n            var G = i & g ^ ~i & v,\n                Q = l & e ^ l & t ^ e & t,\n                X = (l << 30 | l >>> 2) ^ (l << 19 | l >>> 13) ^ (l << 10 | l >>> 22),\n                Z = (i << 26 | i >>> 6) ^ (i << 21 | i >>> 11) ^ (i << 7 | i >>> 25),\n                D = b + Z + G + h[y] + f[y],\n                ee = X + Q;\n            b = v, v = g, g = i, i = s + D | 0, s = t, t = e, e = l, l = D + ee | 0;\n          }\n\n          a[0] = a[0] + l | 0, a[1] = a[1] + e | 0, a[2] = a[2] + t | 0, a[3] = a[3] + s | 0, a[4] = a[4] + i | 0, a[5] = a[5] + g | 0, a[6] = a[6] + v | 0, a[7] = a[7] + b | 0;\n        },\n        _doFinalize: function () {\n          var o = this._data,\n              u = o.words,\n              a = this._nDataBytes * 8,\n              l = o.sigBytes * 8;\n          return u[l >>> 5] |= 128 << 24 - l % 32, u[(l + 64 >>> 9 << 4) + 14] = r.floor(a / 4294967296), u[(l + 64 >>> 9 << 4) + 15] = a, o.sigBytes = u.length * 4, this._process(), this._hash;\n        },\n        clone: function () {\n          var o = w.clone.call(this);\n          return o._hash = this._hash.clone(), o;\n        }\n      });\n      c.SHA256 = w._createHelper(m), c.HmacSHA256 = w._createHmacHelper(m);\n    }(Math), n.SHA256;\n  });\n});\nvar q = k((U, L) => {\n  (function (n, r) {\n    typeof U == \"object\" ? L.exports = U = r(P()) : typeof define == \"function\" && define.amd ? define([\"./core\"], r) : r(n.CryptoJS);\n  })(U, function (n) {\n    return function () {\n      var r = n,\n          c = r.lib,\n          _ = c.WordArray,\n          p = r.enc,\n          w = p.Base64 = {\n        stringify: function (d) {\n          var h = d.words,\n              f = d.sigBytes,\n              m = this._map;\n          d.clamp();\n\n          for (var o = [], u = 0; u < f; u += 3) for (var a = h[u >>> 2] >>> 24 - u % 4 * 8 & 255, l = h[u + 1 >>> 2] >>> 24 - (u + 1) % 4 * 8 & 255, e = h[u + 2 >>> 2] >>> 24 - (u + 2) % 4 * 8 & 255, t = a << 16 | l << 8 | e, s = 0; s < 4 && u + s * .75 < f; s++) o.push(m.charAt(t >>> 6 * (3 - s) & 63));\n\n          var i = m.charAt(64);\n          if (i) for (; o.length % 4;) o.push(i);\n          return o.join(\"\");\n        },\n        parse: function (d) {\n          var h = d.length,\n              f = this._map,\n              m = this._reverseMap;\n\n          if (!m) {\n            m = this._reverseMap = [];\n\n            for (var o = 0; o < f.length; o++) m[f.charCodeAt(o)] = o;\n          }\n\n          var u = f.charAt(64);\n\n          if (u) {\n            var a = d.indexOf(u);\n            a !== -1 && (h = a);\n          }\n\n          return R(d, h, m);\n        },\n        _map: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\n      };\n\n      function R(d, h, f) {\n        for (var m = [], o = 0, u = 0; u < h; u++) if (u % 4) {\n          var a = f[d.charCodeAt(u - 1)] << u % 4 * 2,\n              l = f[d.charCodeAt(u)] >>> 6 - u % 4 * 2;\n          m[o >>> 2] |= (a | l) << 24 - o % 4 * 8, o++;\n        }\n\n        return _.create(m, o);\n      }\n    }(), n.enc.Base64;\n  });\n});\nimport { Extension as le } from \"magic-sdk\";\n\nvar E = (r => (r.ParseRedirectResult = \"magic_oauth_parse_redirect_result\", r))(E || {}),\n    ce = (o => (o.InvalidRequest = \"invalid_request\", o.InvalidClient = \"invalid_client\", o.InvalidScope = \"invalid_scope\", o.InvalidGrant = \"invalid_grant\", o.UnauthorizedClient = \"unauthorized_client\", o.UnsupportedResponseType = \"unsupported_response_type\", o.UnsupportedGrantType = \"unsupported_grant_type\", o.UnsupportedTokenType = \"unsupported_token_type\", o.AccessDenied = \"access_denied\", o.ServerError = \"server_error\", o.TemporarilyUnavailable = \"temporarily_unavailable\", o))(ce || {});\n\nvar $ = T(z()),\n    M = T(q()),\n    N = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\",\n    j = typeof window != \"undefined\" && !!window.crypto,\n    ue = j && !!window.crypto.subtle;\n\nfunction fe(n) {\n  return Array.from(n).map(r => N[r % N.length]).join(\"\");\n}\n\nfunction J(n) {\n  let r = c => c.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n\n  if (n instanceof ArrayBuffer) {\n    let c = new Uint8Array(n),\n        _ = Array.from(c).map(w => String.fromCharCode(w)).join(\"\"),\n        p = btoa(_);\n\n    return r(p);\n  }\n\n  return r(M.default.stringify(n));\n}\n\nfunction de(n) {\n  return C(this, null, function* () {\n    if (ue) {\n      let r = new TextEncoder().encode(n);\n      return crypto.subtle.digest(\"SHA-256\", r).then(J);\n    }\n\n    return J((0, $.default)(n));\n  });\n}\n\nfunction V(n) {\n  let r = new Uint8Array(n);\n  if (j) window.crypto.getRandomValues(r);else for (let c = 0; c < n; c += 1) r[c] = Math.floor(Math.random() * Math.floor(255));\n  return fe(r);\n}\n\nfunction K() {\n  return C(this, null, function* () {\n    let n = V(128),\n        r = V(128),\n        c = yield de(r);\n    return {\n      verifier: r,\n      challenge: c,\n      state: n\n    };\n  });\n}\n\nvar he = class extends le.Internal {\n  constructor() {\n    super(...arguments);\n    this.name = \"oauth\";\n    this.config = {};\n    this.compat = {\n      \"magic-sdk\": \">=2.4.6\",\n      \"@magic-sdk/react-native\": !1\n    };\n  }\n\n  loginWithRedirect(r) {\n    return this.utils.createPromiEvent(c => C(this, null, function* () {\n      let {\n        provider: _,\n        query: p\n      } = yield pe.call(this, r);\n      window.location.href = new URL(`/v1/oauth2/${_}/start?${p}`, this.sdk.endpoint).href, c();\n    }));\n  }\n\n  getRedirectResult() {\n    let r = window.location.search,\n        c = window.location.origin + window.location.pathname;\n    return window.history.replaceState(null, \"\", c), ve.call(this, r);\n  }\n\n},\n    O = \"oauth_redirect_metadata\";\n\nfunction pe(n) {\n  return C(this, null, function* () {\n    yield this.utils.storage.removeItem(O);\n    let {\n      provider: r,\n      redirectURI: c,\n      scope: _,\n      loginHint: p\n    } = n,\n        {\n      verifier: w,\n      challenge: R,\n      state: d\n    } = yield K(),\n        h = JSON.stringify({\n      verifier: w,\n      state: d\n    });\n    return yield this.utils.storage.setItem(O, h), {\n      query: [`magic_api_key=${encodeURIComponent(this.sdk.apiKey)}`, `magic_challenge=${encodeURIComponent(R)}`, `state=${encodeURIComponent(d)}`, `platform=${encodeURIComponent(\"web\")}`, _ && `scope=${encodeURIComponent(_.join(\" \"))}`, c && `redirect_uri=${encodeURIComponent(c)}`, p && `login_hint=${encodeURIComponent(p)}`].reduce((m, o) => o ? `${m}&${o}` : m),\n      provider: r,\n      redirectURI: c\n    };\n  });\n}\n\nfunction ve(n) {\n  return this.utils.createPromiEvent((r, c) => C(this, null, function* () {\n    var m;\n\n    let _ = yield this.utils.storage.getItem(O),\n        {\n      verifier: p,\n      state: w\n    } = JSON.parse(_);\n\n    this.utils.storage.removeItem(O);\n    let R = this.utils.createJsonRpcRequestPayload(\"magic_oauth_parse_redirect_result\", [n, p, w]),\n        d = yield this.request(R),\n        h = d,\n        f = d;\n    f.error && c(this.createError(f.error, (m = f.error_description) != null ? m : \"An error occurred.\", {\n      errorURI: f.error_uri,\n      provider: f.provider\n    })), r(h);\n  }));\n}\n\nexport { ce as OAuthErrorCode, he as OAuthExtension, E as OAuthPayloadMethods };","map":{"version":3,"mappings":"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","names":["n","r","I","F","exports","define","amd","CryptoJS","c","_","Object","create","t","s","prototype","e","p","w","lib","R","Base","extend","mixIn","hasOwnProperty","init","$super","apply","arguments","toString","clone","d","WordArray","words","sigBytes","length","f","stringify","concat","i","g","clamp","v","b","ceil","call","slice","random","y","A","B","x","push","h","enc","Hex","join","parse","parseInt","substr","m","Latin1","String","fromCharCode","charCodeAt","o","Utf8","decodeURIComponent","escape","Error","unescape","encodeURIComponent","u","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","blockSize","max","_minBufferSize","min","_doProcessBlock","splice","a","Hasher","cfg","_doReset","update","finalize","_doFinalize","_createHelper","_createHmacHelper","l","HMAC","algo","Math","S","W","P","sqrt","pow","SHA256","_hash","Y","G","Q","X","Z","D","ee","floor","HmacSHA256","U","L","Base64","_map","charAt","_reverseMap","indexOf","E","ce","T","M","N","j","window","crypto","ue","subtle","Array","from","map","replace","ArrayBuffer","Uint8Array","btoa","TextEncoder","encode","digest","then","J","getRandomValues","fe","V","de","verifier","challenge","state","le","Internal","constructor","loginWithRedirect","utils","createPromiEvent","C","provider","query","pe","location","href","URL","sdk","endpoint","getRedirectResult","search","origin","pathname","history","replaceState","ve","O","storage","removeItem","redirectURI","scope","loginHint","K","JSON","setItem","apiKey","reduce","getItem","createJsonRpcRequestPayload","request","error","createError","error_description","errorURI","error_uri"],"sources":["/Users/bernie/development/youtube/reactjs/magic-link/node_modules/@magic-ext/oauth/node_modules/crypto-js/core.js","/Users/bernie/development/youtube/reactjs/magic-link/node_modules/@magic-ext/oauth/node_modules/crypto-js/sha256.js","/Users/bernie/development/youtube/reactjs/magic-link/node_modules/@magic-ext/oauth/node_modules/crypto-js/enc-base64.js","/Users/bernie/development/youtube/reactjs/magic-link/node_modules/@magic-ext/oauth/src/index.ts","/Users/bernie/development/youtube/reactjs/magic-link/node_modules/@magic-ext/oauth/src/types.ts","/Users/bernie/development/youtube/reactjs/magic-link/node_modules/@magic-ext/oauth/src/crypto.ts"],"sourcesContent":[";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { Extension } from 'magic-sdk';\nimport {\n  OAuthErrorData,\n  OAuthPayloadMethods,\n  OAuthRedirectError,\n  OAuthRedirectResult,\n  OAuthRedirectConfiguration,\n} from './types';\nimport { createCryptoChallenge } from './crypto';\n\nexport class OAuthExtension extends Extension.Internal<'oauth'> {\n  name = 'oauth' as const;\n  config = {};\n  compat = {\n    'magic-sdk': '>=2.4.6',\n    '@magic-sdk/react-native': false,\n  };\n\n  public loginWithRedirect(configuration: OAuthRedirectConfiguration) {\n    return this.utils.createPromiEvent<void>(async (resolve) => {\n      const { provider, query } = await createURI.call(this, configuration);\n\n      // @ts-ignore - this.sdk.endpoint is marked protected but we need to access it.\n      window.location.href = new URL(`/v1/oauth2/${provider}/start?${query}`, this.sdk.endpoint).href;\n\n      resolve();\n    });\n  }\n\n  public getRedirectResult() {\n    const queryString = window.location.search;\n\n    // Remove the query from the redirect callback as a precaution to prevent\n    // malicious parties from parsing it before we have a chance to use it.\n    const urlWithoutQuery = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, '', urlWithoutQuery);\n\n    return getResult.call(this, queryString);\n  }\n}\n\nconst OAUTH_REDIRECT_METADATA_KEY = 'oauth_redirect_metadata';\n\nasync function createURI(this: OAuthExtension, configuration: OAuthRedirectConfiguration) {\n  // Bust any old, in-progress OAuth flows.\n  await this.utils.storage.removeItem(OAUTH_REDIRECT_METADATA_KEY);\n\n  // Unpack configuration, generate crypto values, and persist to storage.\n  const { provider, redirectURI, scope, loginHint } = configuration;\n  const { verifier, challenge, state } = await createCryptoChallenge();\n\n  /* Stringify for RN Async storage */\n  const storedData = JSON.stringify({\n    verifier,\n    state,\n  });\n\n  await this.utils.storage.setItem(OAUTH_REDIRECT_METADATA_KEY, storedData);\n\n  // Formulate the initial redirect query to Magic's OAuth hub.\n  // Required fields:\n  //   - `magic_api_key`\n  //   - `magic_challenge`\n  //   - `state`\n  //   - `redirect_uri`\n  //   - `platform`\n\n  const query = [\n    `magic_api_key=${encodeURIComponent(this.sdk.apiKey)}`,\n    `magic_challenge=${encodeURIComponent(challenge)}`,\n    `state=${encodeURIComponent(state)}`,\n    `platform=${encodeURIComponent('web')}`,\n    scope && `scope=${encodeURIComponent(scope.join(' '))}`,\n    redirectURI && `redirect_uri=${encodeURIComponent(redirectURI)}`,\n    loginHint && `login_hint=${encodeURIComponent(loginHint)}`,\n  ].reduce((prev, next) => (next ? `${prev}&${next}` : prev));\n\n  return {\n    query,\n    provider,\n    redirectURI,\n  };\n}\n\nfunction getResult(this: OAuthExtension, queryString: string) {\n  return this.utils.createPromiEvent<OAuthRedirectResult>(async (resolve, reject) => {\n    const json: string = await this.utils.storage.getItem(OAUTH_REDIRECT_METADATA_KEY);\n\n    const { verifier, state } = JSON.parse(json);\n\n    // Remove the save OAuth state from storage, it stays in memory now...\n    this.utils.storage.removeItem(OAUTH_REDIRECT_METADATA_KEY);\n\n    const parseRedirectResult = this.utils.createJsonRpcRequestPayload(OAuthPayloadMethods.ParseRedirectResult, [\n      queryString,\n      verifier,\n      state,\n    ]);\n\n    // Parse the result, which may contain an OAuth-formatted error.\n    const resultOrError = await this.request<OAuthRedirectResult | OAuthRedirectError>(parseRedirectResult);\n    const maybeResult = resultOrError as OAuthRedirectResult;\n    const maybeError = resultOrError as OAuthRedirectError;\n\n    if (maybeError.error) {\n      reject(\n        this.createError<OAuthErrorData>(maybeError.error, maybeError.error_description ?? 'An error occurred.', {\n          errorURI: maybeError.error_uri,\n          provider: maybeError.provider,\n        }),\n      );\n    }\n\n    resolve(maybeResult);\n  });\n}\n\nexport * from './types';\n","import { MagicUserMetadata } from '@magic-sdk/types';\n\nexport enum OAuthPayloadMethods {\n  ParseRedirectResult = 'magic_oauth_parse_redirect_result',\n}\n\nexport type OAuthProvider =\n  | 'google'\n  | 'facebook'\n  | 'apple'\n  | 'github'\n  | 'bitbucket'\n  | 'gitlab'\n  | 'linkedin'\n  | 'twitter'\n  | 'discord'\n  | 'twitch'\n  | 'microsoft';\n\nexport interface OAuthErrorData {\n  provider: OAuthProvider;\n  errorURI?: string;\n}\n\nexport interface OpenIDConnectProfile {\n  name?: string;\n  familyName?: string;\n  givenName?: string;\n  middleName?: string;\n  nickname?: string;\n  preferredUsername?: string;\n  profile?: string;\n  picture?: string;\n  website?: string;\n  gender?: string;\n  birthdate?: string;\n  zoneinfo?: string;\n  locale?: string;\n  updatedAt?: number;\n}\n\nexport interface OpenIDConnectEmail {\n  email?: string;\n  emailVerified?: boolean;\n}\n\nexport interface OpenIDConnectPhone {\n  phoneNumber?: string;\n  phoneNumberVerified?: boolean;\n}\n\nexport interface OpenIDConnectAddress {\n  address?: {\n    formatted?: string;\n    streetAddress?: string;\n    locality?: string;\n    region?: string;\n    postalCode?: string;\n    country?: string;\n  };\n}\n\nexport type OpenIDConnectUserInfo = OpenIDConnectProfile &\n  OpenIDConnectEmail &\n  OpenIDConnectPhone &\n  OpenIDConnectAddress & { sub?: string; sources?: Record<string, any> } & Record<string, any>;\n\nexport interface OAuthRedirectResult {\n  oauth: {\n    provider: OAuthProvider;\n    scope: string[];\n    accessToken: string;\n    userHandle: string;\n    userInfo: OpenIDConnectUserInfo;\n  };\n\n  magic: {\n    idToken: string;\n    userMetadata: MagicUserMetadata;\n  };\n}\n\nexport interface OAuthRedirectError {\n  provider: OAuthProvider;\n  error: string;\n  error_description?: string;\n  error_uri?: string;\n}\n\nexport interface OAuthRedirectConfiguration {\n  provider: OAuthProvider;\n  redirectURI: string;\n  scope?: string[];\n  loginHint?: string;\n}\n\nexport enum OAuthErrorCode {\n  InvalidRequest = 'invalid_request',\n  InvalidClient = 'invalid_client',\n  InvalidScope = 'invalid_scope',\n  InvalidGrant = 'invalid_grant',\n  UnauthorizedClient = 'unauthorized_client',\n  UnsupportedResponseType = 'unsupported_response_type',\n  UnsupportedGrantType = 'unsupported_grant_type',\n  UnsupportedTokenType = 'unsupported_token_type',\n  AccessDenied = 'access_denied',\n  ServerError = 'server_error',\n  TemporarilyUnavailable = 'temporarily_unavailable',\n}\n","import { WordArray } from 'crypto-js';\nimport sha256Fallback from 'crypto-js/sha256';\nimport Base64 from 'crypto-js/enc-base64';\n\nconst CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\nconst HAS_CRYPTO = typeof window !== 'undefined' && !!(window.crypto as any);\nconst HAS_SUBTLE_CRYPTO = HAS_CRYPTO && !!(window.crypto.subtle as any);\n\n/**\n * Stringifies `bytes` using the OAuth 2.0 `code_verifier` character set.\n */\nfunction bytesToVerifierString(bytes: Uint8Array) {\n  return Array.from(bytes)\n    .map((value: number) => CHARSET[value % CHARSET.length])\n    .join('');\n}\n\n/**\n * Stringifies argument (as CryptoJS `WordArray` or EcmaScript `ArrayBuffer`)\n * and encodes to URL-safe Base64.\n */\nfunction base64URLEncodeFromByteArray(wordArray: WordArray): string;\nfunction base64URLEncodeFromByteArray(arrayBuffer: ArrayBuffer): string;\nfunction base64URLEncodeFromByteArray(arg: WordArray | ArrayBuffer): string {\n  const makeURLSafe = (base64: string) => {\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n  };\n\n  if (arg instanceof ArrayBuffer) {\n    const bytes = new Uint8Array(arg);\n    const utf8Binary = Array.from(bytes)\n      .map((value) => String.fromCharCode(value))\n      .join('');\n\n    const base64 = btoa(utf8Binary);\n    return makeURLSafe(base64);\n  }\n\n  return makeURLSafe(Base64.stringify(arg));\n}\n\n/**\n * Produces a SHA-256 hash of the given `message`. This function first attempts\n * to use the browser's built-in `SubtleCrypto` API, falling back to\n * CryptoJS if required.\n */\nasync function sha256(message: string) {\n  if (HAS_SUBTLE_CRYPTO) {\n    const bytes = new TextEncoder().encode(message);\n    return crypto.subtle.digest('SHA-256', bytes).then(base64URLEncodeFromByteArray);\n  }\n\n  return base64URLEncodeFromByteArray(sha256Fallback(message));\n}\n\n/**\n * Creates a cryptographically random string using the browser's built-in\n * `Crypto` API, falling back to `Math.random` if required.\n */\nfunction createRandomString(size: number) {\n  const bytes = new Uint8Array(size);\n\n  if (HAS_CRYPTO) {\n    window.crypto.getRandomValues(bytes);\n  } else {\n    for (let i = 0; i < size; i += 1) bytes[i] = Math.floor(Math.random() * Math.floor(255));\n  }\n\n  return bytesToVerifierString(bytes);\n}\n\n/**\n * Creates OAuth 2.0-compatible `code_verifier`, `code_challenge`, and `state`\n * parameters.\n */\nexport async function createCryptoChallenge() {\n  const state = createRandomString(128);\n  const verifier = createRandomString(128);\n  const challenge = await sha256(verifier);\n  return { verifier, challenge, state };\n}\n"]},"metadata":{},"sourceType":"module"}