{"ast":null,"code":"var _jsxFileName = \"/Users/bernie/development/youtube/reactjs/redux-counter-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport { increment, decrement, incrementByAmount } from './redux/counterSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //store.jsのcounterを取得\n  const count = useSelector(state => state.counter.value);\n  const dispatch = useDispatch();\n  const {\n    incrementAmount,\n    setIncrementAmount\n  } = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setIncrementAmount(e.target.value),\n      value: Number(incrementAmount)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(increment()),\n      children: \"\\uFF0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(decrement()),\n      children: \"\\u30FC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(incrementByAmount(incrementAmount)),\n      children: \"\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sZm+kM1NS7qksBkV5jmAL0xELJw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bernie/development/youtube/reactjs/redux-counter-app/src/App.js"],"names":["useState","useDispatch","useSelector","increment","decrement","incrementByAmount","App","count","state","counter","value","dispatch","incrementAmount","setIncrementAmount","e","target","Number"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,WAAP;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,iBAA/B,QAAwD,sBAAxD;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,KAAK,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,KAA1B,CAAzB;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAACW,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,MAAwCb,QAAQ,CAAC,CAAD,CAAtD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,4BAAaO,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,QAAQ,EAAIO,CAAD,IAAMD,kBAAkB,CAACC,CAAC,CAACC,MAAF,CAASL,KAAV,CAA1C;AAA6D,MAAA,KAAK,EAAEM,MAAM,CAACJ,eAAD;AAA1E;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACR,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMQ,QAAQ,CAACP,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMO,QAAQ,CAACN,iBAAiB,CAACO,eAAD,CAAlB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAfQN,G;UAEOJ,W,EACGD,W;;;KAHVK,G;AAiBT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport { increment, decrement, incrementByAmount } from './redux/counterSlice';\n\nfunction App() {\n  //store.jsのcounterを取得\n  const count = useSelector((state) => state.counter.value);\n  const dispatch = useDispatch();\n  const {incrementAmount, setIncrementAmount} = useState(0);\n\n  return (\n    <div className=\"App\">\n      <h1>count: { count }</h1>\n      <input onChange={ (e)=> setIncrementAmount(e.target.value) } value={Number(incrementAmount)} />\n      <button onClick={() => dispatch(increment())}>＋</button>\n      <button onClick={() => dispatch(decrement())}>ー</button>\n      <button onClick={() => dispatch(incrementByAmount(incrementAmount))}>追加</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}